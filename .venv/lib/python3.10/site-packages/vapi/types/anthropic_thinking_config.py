# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class AnthropicThinkingConfig(UncheckedBaseModel):
    type: typing.Literal["enabled"] = "enabled"
    budget_tokens: typing_extensions.Annotated[float, FieldMetadata(alias="budgetTokens")] = pydantic.Field()
    """
    The maximum number of tokens to allocate for thinking.
    Must be between 1024 and 100000 tokens.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
