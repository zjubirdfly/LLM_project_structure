# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class ServerMessageResponseVoiceRequest(UncheckedBaseModel):
    data: str = pydantic.Field()
    """
    DO NOT respond to a `voice-request` webhook with this schema of { data }. This schema just exists to document what the response should look like. Follow these instructions:
    
    Here is what the request will look like:
    
    POST https://{assistant.voice.server.url}
    Content-Type: application/json
    
    {
      "messsage": {
        "type": "voice-request",
        "text": "Hello, world!",
        "sampleRate": 24000,
        ...other metadata about the call...
      }
    }
    
    The expected response is 1-channel 16-bit raw PCM audio at the sample rate specified in the request. Here is how the response will be piped to the transport:
    ```
    response.on('data', (chunk: Buffer) => {
      outputStream.write(chunk);
    });
    ```
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
