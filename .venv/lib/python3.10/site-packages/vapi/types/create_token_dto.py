# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .create_token_dto_tag import CreateTokenDtoTag
from .token_restrictions import TokenRestrictions


class CreateTokenDto(UncheckedBaseModel):
    tag: typing.Optional[CreateTokenDtoTag] = pydantic.Field(default=None)
    """
    This is the tag for the token. It represents its scope.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is the name of the token. This is just for your own reference.
    """

    restrictions: typing.Optional[TokenRestrictions] = pydantic.Field(default=None)
    """
    This are the restrictions for the token.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
