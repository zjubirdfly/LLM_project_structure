# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .server_message_response_message_response import ServerMessageResponseMessageResponse


class ServerMessageResponse(UncheckedBaseModel):
    message_response: typing_extensions.Annotated[
        ServerMessageResponseMessageResponse, FieldMetadata(alias="messageResponse")
    ] = pydantic.Field()
    """
    This is the response that is expected from the server to the message.
    
    Note: Most messages don't expect a response. Only "assistant-request", "tool-calls" and "transfer-destination-request" do.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
