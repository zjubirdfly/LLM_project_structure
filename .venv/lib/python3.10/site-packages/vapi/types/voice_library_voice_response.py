# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class VoiceLibraryVoiceResponse(UncheckedBaseModel):
    voice_id: typing_extensions.Annotated[str, FieldMetadata(alias="voiceId")]
    name: str
    public_owner_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="publicOwnerId")] = None
    description: typing.Optional[str] = None
    gender: typing.Optional[str] = None
    age: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    accent: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
