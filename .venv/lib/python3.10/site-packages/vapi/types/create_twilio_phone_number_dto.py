# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .create_twilio_phone_number_dto_fallback_destination import CreateTwilioPhoneNumberDtoFallbackDestination
from .phone_number_hook_call_ringing import PhoneNumberHookCallRinging
from .server import Server


class CreateTwilioPhoneNumberDto(UncheckedBaseModel):
    fallback_destination: typing_extensions.Annotated[
        typing.Optional[CreateTwilioPhoneNumberDtoFallbackDestination], FieldMetadata(alias="fallbackDestination")
    ] = pydantic.Field(default=None)
    """
    This is the fallback destination an inbound call will be transferred to if:
    1. `assistantId` is not set
    2. `squadId` is not set
    3. and, `assistant-request` message to the `serverUrl` fails
    
    If this is not set and above conditions are met, the inbound call is hung up with an error message.
    """

    hooks: typing.Optional[typing.List[PhoneNumberHookCallRinging]] = pydantic.Field(default=None)
    """
    This is the hooks that will be used for incoming calls to this phone number.
    """

    provider: typing.Literal["twilio"] = "twilio"
    sms_enabled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="smsEnabled")] = pydantic.Field(
        default=None
    )
    """
    Controls whether Vapi sets the messaging webhook URL on the Twilio number during import.
    
    If set to `false`, Vapi will not update the Twilio messaging URL, leaving it as is.
    If `true` or omitted (default), Vapi will configure both the voice and messaging URLs.
    
    @default true
    """

    number: str = pydantic.Field()
    """
    These are the digits of the phone number you own on your Twilio.
    """

    twilio_account_sid: typing_extensions.Annotated[str, FieldMetadata(alias="twilioAccountSid")] = pydantic.Field()
    """
    This is the Twilio Account SID for the phone number.
    """

    twilio_auth_token: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="twilioAuthToken")] = (
        pydantic.Field(default=None)
    )
    """
    This is the Twilio Auth Token for the phone number.
    """

    twilio_api_key: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="twilioApiKey")] = (
        pydantic.Field(default=None)
    )
    """
    This is the Twilio API Key for the phone number.
    """

    twilio_api_secret: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="twilioApiSecret")] = (
        pydantic.Field(default=None)
    )
    """
    This is the Twilio API Secret for the phone number.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is the name of the phone number. This is just for your own reference.
    """

    assistant_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assistantId")] = (
        pydantic.Field(default=None)
    )
    """
    This is the assistant that will be used for incoming calls to this phone number.
    
    If neither `assistantId`, `squadId` nor `workflowId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
    """

    workflow_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="workflowId")] = pydantic.Field(
        default=None
    )
    """
    This is the workflow that will be used for incoming calls to this phone number.
    
    If neither `assistantId`, `squadId`, nor `workflowId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
    """

    squad_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="squadId")] = pydantic.Field(
        default=None
    )
    """
    This is the squad that will be used for incoming calls to this phone number.
    
    If neither `assistantId`, `squadId`, nor `workflowId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
    """

    server: typing.Optional[Server] = pydantic.Field(default=None)
    """
    This is where Vapi will send webhooks. You can find all webhooks available along with their shape in ServerMessage schema.
    
    The order of precedence is:
    
    1. assistant.server
    2. phoneNumber.server
    3. org.server
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
