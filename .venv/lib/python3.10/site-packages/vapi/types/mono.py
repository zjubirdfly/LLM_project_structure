# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class Mono(UncheckedBaseModel):
    combined_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="combinedUrl")] = (
        pydantic.Field(default=None)
    )
    """
    This is the combined recording url for the call. To enable, set `assistant.artifactPlan.recordingEnabled`.
    """

    assistant_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assistantUrl")] = (
        pydantic.Field(default=None)
    )
    """
    This is the mono recording url for the assistant. To enable, set `assistant.artifactPlan.recordingEnabled`.
    """

    customer_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="customerUrl")] = (
        pydantic.Field(default=None)
    )
    """
    This is the mono recording url for the customer. To enable, set `assistant.artifactPlan.recordingEnabled`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
