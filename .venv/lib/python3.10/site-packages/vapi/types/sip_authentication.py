# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class SipAuthentication(UncheckedBaseModel):
    realm: typing.Optional[str] = pydantic.Field(default=None)
    """
    This will be expected in the `realm` field of the `authorization` header of the SIP INVITE. Defaults to sip.vapi.ai.
    """

    username: str = pydantic.Field()
    """
    This will be expected in the `username` field of the `authorization` header of the SIP INVITE.
    """

    password: str = pydantic.Field()
    """
    This will be expected to generate the `response` field of the `authorization` header of the SIP INVITE, through digest authentication.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
