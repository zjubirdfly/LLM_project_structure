# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .variable_extraction_schema_type import VariableExtractionSchemaType


class VariableExtractionSchema(UncheckedBaseModel):
    type: VariableExtractionSchemaType = pydantic.Field()
    """
    This is the type of output you'd like.
    
    `string`, `number`, `boolean` are primitive types.
    """

    title: str = pydantic.Field()
    """
    This is the title of the variable.
    
    It can only contain letters, numbers, and underscores.
    """

    description: str = pydantic.Field()
    """
    This is the description to help the model understand what it needs to output.
    """

    enum: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    This is the enum values to choose from. Only used if the type is `string`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
