# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class CloudflareR2BucketPlan(UncheckedBaseModel):
    access_key_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accessKeyId")] = (
        pydantic.Field(default=None)
    )
    """
    Cloudflare R2 Access key ID.
    """

    secret_access_key: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="secretAccessKey")] = (
        pydantic.Field(default=None)
    )
    """
    Cloudflare R2 access key secret. This is not returned in the API.
    """

    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    Cloudflare R2 base url.
    """

    name: str = pydantic.Field()
    """
    This is the name of the bucket.
    """

    path: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is the path where call artifacts will be stored.
    
    Usage:
    - To store call artifacts in a specific folder, set this to the full path. Eg. "/folder-name1/folder-name2".
    - To store call artifacts in the root of the bucket, leave this blank.
    
    @default "/"
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
