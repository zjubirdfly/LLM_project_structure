# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class InvoicePlan(UncheckedBaseModel):
    company_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="companyName")] = (
        pydantic.Field(default=None)
    )
    """
    This is the name of the company.
    """

    company_address: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="companyAddress")] = (
        pydantic.Field(default=None)
    )
    """
    This is the address of the company.
    """

    company_tax_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="companyTaxId")] = (
        pydantic.Field(default=None)
    )
    """
    This is the tax ID of the company.
    """

    company_email: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="companyEmail")] = (
        pydantic.Field(default=None)
    )
    """
    This is the preferred invoicing email of the company. If not specified, defaults to the subscription's email.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
