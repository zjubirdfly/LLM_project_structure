# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .time_range_step import TimeRangeStep


class TimeRange(UncheckedBaseModel):
    step: typing.Optional[TimeRangeStep] = pydantic.Field(default=None)
    """
    This is the time step for aggregations.
    
    If not provided, defaults to returning for the entire time range.
    """

    start: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    This is the start date for the time range.
    
    If not provided, defaults to the 7 days ago.
    """

    end: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    This is the end date for the time range.
    
    If not provided, defaults to now.
    """

    timezone: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is the timezone you want to set for the query.
    
    If not provided, defaults to UTC.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
