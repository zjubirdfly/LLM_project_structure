# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .call_log_privileged_level import CallLogPrivilegedLevel


class CallLogPrivileged(UncheckedBaseModel):
    call_id: typing_extensions.Annotated[str, FieldMetadata(alias="callId")] = pydantic.Field()
    """
    This is the unique identifier for the call.
    """

    org_id: typing_extensions.Annotated[str, FieldMetadata(alias="orgId")] = pydantic.Field()
    """
    This is the unique identifier for the org that this call log belongs to.
    """

    log: str = pydantic.Field()
    """
    This is the log message associated with the call.
    """

    level: CallLogPrivilegedLevel = pydantic.Field()
    """
    This is the level of the log message.
    """

    time: dt.datetime = pydantic.Field()
    """
    This is the ISO 8601 date-time string of when the log was created.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
