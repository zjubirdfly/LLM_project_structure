# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class AssistantHookFilter(UncheckedBaseModel):
    type: typing.Literal["oneOf"] = pydantic.Field(default="oneOf")
    """
    This is the type of filter - currently only "oneOf" is supported
    """

    key: str = pydantic.Field()
    """
    This is the key to filter on (e.g. "call.endedReason")
    """

    one_of: typing_extensions.Annotated[typing.List[str], FieldMetadata(alias="oneOf")] = pydantic.Field()
    """
    This is the array of possible values to match against
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
