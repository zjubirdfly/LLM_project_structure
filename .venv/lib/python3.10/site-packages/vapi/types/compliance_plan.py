# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class CompliancePlan(UncheckedBaseModel):
    hipaa_enabled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="hipaaEnabled")] = (
        pydantic.Field(default=None)
    )
    """
    When this is enabled, no logs, recordings, or transcriptions will be stored.
    At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.
    """

    pci_enabled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="pciEnabled")] = pydantic.Field(
        default=None
    )
    """
    When this is enabled, the user will be restricted to use PCI-compliant providers, and no logs or transcripts are stored.
    At the end of the call, you will receive an end-of-call-report message to store on your server. Defaults to false.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
