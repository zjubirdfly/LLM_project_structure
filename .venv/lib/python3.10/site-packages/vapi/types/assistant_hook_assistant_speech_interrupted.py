# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .assistant_hook_assistant_speech_interrupted_do_item import AssistantHookAssistantSpeechInterruptedDoItem


class AssistantHookAssistantSpeechInterrupted(UncheckedBaseModel):
    on: typing.Literal["assistant.speech.interrupted"] = pydantic.Field(default="assistant.speech.interrupted")
    """
    This is the event that triggers this hook
    """

    do: typing.List[AssistantHookAssistantSpeechInterruptedDoItem] = pydantic.Field()
    """
    This is the set of actions to perform when the hook triggers
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
