# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .client_inbound_message_control_control import ClientInboundMessageControlControl


class ClientInboundMessageControl(UncheckedBaseModel):
    type: typing.Literal["control"] = pydantic.Field(default="control")
    """
    This is the type of the message. Send "control" message to control the assistant. `control` options are:
    - "mute-assistant" - mute the assistant
    - "unmute-assistant" - unmute the assistant
    - "say-first-message" - say the first message (this is used when video recording is enabled and the conversation is only started once the client side kicks off the recording)
    """

    control: ClientInboundMessageControlControl = pydantic.Field()
    """
    This is the control action
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
