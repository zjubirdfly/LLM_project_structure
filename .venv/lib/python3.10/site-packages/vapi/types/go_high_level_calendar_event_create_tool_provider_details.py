# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .tool_template_setup import ToolTemplateSetup


class GoHighLevelCalendarEventCreateToolProviderDetails(UncheckedBaseModel):
    template_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="templateUrl")] = (
        pydantic.Field(default=None)
    )
    """
    This is the Template URL or the Snapshot URL corresponding to the Template.
    """

    setup_instructions: typing_extensions.Annotated[
        typing.Optional[typing.List[ToolTemplateSetup]], FieldMetadata(alias="setupInstructions")
    ] = None
    type: typing.Literal["gohighlevel.calendar.event.create"] = pydantic.Field(
        default="gohighlevel.calendar.event.create"
    )
    """
    The type of tool. "gohighlevel.calendar.event.create" for GoHighLevel Calendar event create tool.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
